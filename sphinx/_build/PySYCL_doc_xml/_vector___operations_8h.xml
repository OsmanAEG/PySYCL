<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_vector___operations_8h" kind="file" language="C++">
    <compoundname>Vector_Operations.h</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">CL/sycl.hpp</includes>
    <includes refid="_s_y_c_l___device___inquiry_8h" local="yes">../Device/SYCL_Device_Inquiry.h</includes>
    <includes refid="_math___functions_8h" local="yes">../Math/Math_Functions.h</includes>
    <includedby refid="_vector___py_bind___module_8cpp" local="yes">Vector/Vector_PyBind_Module.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>Vector/Vector_Operations.h</label>
        <link refid="_vector___operations_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>CL/sycl.hpp</label>
      </node>
      <node id="5">
        <label>../Math/Math_Functions.h</label>
        <link refid="_math___functions_8h"/>
      </node>
      <node id="4">
        <label>../Device/SYCL_Device_Inquiry.h</label>
        <link refid="_s_y_c_l___device___inquiry_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>Vector/Vector_Operations.h</label>
        <link refid="_vector___operations_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Vector/Vector_PyBind_Module.cpp</label>
        <link refid="_vector___py_bind___module_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacepysycl">pysycl</innernamespace>
    <briefdescription>
<para>Vector operations in PySYCL. These operations receive two individual vectors and return a single vector. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>VECTOR_OPERATIONS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VECTOR_OPERATIONS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">///////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>PySYCL<sp/>software<sp/>for<sp/>SYCL<sp/>development<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Python.<sp/><sp/>It<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>licence.<sp/><sp/>A<sp/>copy<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>license,<sp/>in<sp/>a<sp/>file<sp/>named<sp/>LICENSE.md,<sp/>should<sp/>have<sp/>been</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>file.<sp/><sp/>A<sp/>copy<sp/>of<sp/>this<sp/>license<sp/>is<sp/>also</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>currently<sp/>available<sp/>at<sp/>&quot;http://opensource.org/licenses/MIT&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>explicitly<sp/>stated,<sp/>all<sp/>contributions<sp/>intentionally<sp/>submitted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>this<sp/>project<sp/>shall<sp/>also<sp/>be<sp/>under<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>license,<sp/>without<sp/>any<sp/>additional<sp/>terms<sp/>or<sp/>conditions.</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">///////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment">///////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="17"><highlight class="comment">///<sp/>\file</highlight></codeline>
<codeline lineno="18"><highlight class="comment">///<sp/>\brief<sp/>Vector<sp/>operations<sp/>in<sp/>PySYCL.<sp/>These<sp/>operations<sp/>receive</highlight></codeline>
<codeline lineno="19"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>two<sp/>individual<sp/>vectors<sp/>and<sp/>return<sp/>a<sp/>single<sp/>vector.</highlight></codeline>
<codeline lineno="20"><highlight class="comment">///////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CL/sycl.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Device/SYCL_Device_Inquiry.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Math/Math_Functions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="27"><highlight class="comment">///////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="28"><highlight class="comment">///<sp/>\addtogroup<sp/>Vector</highlight></codeline>
<codeline lineno="29"><highlight class="comment">///<sp/>@{</highlight></codeline>
<codeline lineno="30"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacepysycl" kindref="compound">pysycl</ref>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="33"><highlight class="comment">///////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="34"><highlight class="comment">///<sp/>\brief<sp/>Function<sp/>for<sp/>element-wise<sp/>vector<sp/>operations<sp/>in<sp/>SYCL.</highlight></codeline>
<codeline lineno="35"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>function<sp/>receives<sp/>two<sp/>vectors<sp/>and<sp/>returns<sp/>a<sp/>single</highlight></codeline>
<codeline lineno="36"><highlight class="comment">///<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector.</highlight></codeline>
<codeline lineno="37"><highlight class="comment">///<sp/>\tparam<sp/>Function_T<sp/>Type<sp/>of<sp/>operation<sp/>to<sp/>be<sp/>performed.</highlight></codeline>
<codeline lineno="38"><highlight class="comment">///<sp/>\param<sp/>vector_a<sp/>First<sp/>vector.</highlight></codeline>
<codeline lineno="39"><highlight class="comment">///<sp/>\param<sp/>vector_b<sp/>Second<sp/>vector.</highlight></codeline>
<codeline lineno="40"><highlight class="comment">///<sp/>\param<sp/>Q<sp/>SYCL<sp/>queue.</highlight></codeline>
<codeline lineno="41"><highlight class="comment">///<sp/>\param<sp/>function<sp/>Operation<sp/>to<sp/>be<sp/>performed.</highlight></codeline>
<codeline lineno="42"><highlight class="comment">///<sp/>\return<sp/>Vector<sp/>resulting<sp/>from<sp/>the<sp/>operation.</highlight></codeline>
<codeline lineno="43"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Function_T&gt;</highlight></codeline>
<codeline lineno="44" refid="group___vector_1ga5b23a7f925405b53f39962c2ce4c1501" refkind="member"><highlight class="normal">std::vector&lt;double&gt;<sp/><ref refid="group___vector_1ga5b23a7f925405b53f39962c2ce4c1501" kindref="member">Vector_Operation</ref>(std::vector&lt;double&gt;<sp/>vector_a,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>vector_b,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sycl::queue<sp/>Q,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Function_T<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vector_a.size()<sp/>!=<sp/>vector_b.size()){</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Error:<sp/>vectors<sp/>must<sp/>have<sp/>the<sp/>same<sp/>size.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>vector_a.size();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/>vector_c(vector_a.size());</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>sycl::buffer&lt;double&gt;<sp/>buffer_a(vector_a);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>sycl::buffer&lt;double&gt;<sp/>buffer_b(vector_b);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>sycl::buffer&lt;double&gt;<sp/>buffer_c(vector_c);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>Q.submit([&amp;](sycl::handler&amp;<sp/>h){</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sycl::accessor<sp/>acc_a(buffer_a,<sp/>h,<sp/>sycl::read_only);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sycl::accessor<sp/>acc_b(buffer_b,<sp/>h,<sp/>sycl::read_only);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sycl::accessor<sp/>acc_c(buffer_c,<sp/>h,<sp/>sycl::write_only);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h.parallel_for(sycl::range&lt;1&gt;(N),<sp/>[=](sycl::id&lt;1&gt;<sp/>idx){</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acc_c[idx]<sp/>=<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(acc_a[idx],<sp/>acc_b[idx]);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vector_c;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="75"><highlight class="comment">///////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="76"><highlight class="comment">///<sp/>\brief<sp/>Function<sp/>for<sp/>vector<sp/>addition.</highlight></codeline>
<codeline lineno="77"><highlight class="comment">///<sp/>\param<sp/>vector_a<sp/>First<sp/>vector.</highlight></codeline>
<codeline lineno="78"><highlight class="comment">///<sp/>\param<sp/>vector_b<sp/>Second<sp/>vector.</highlight></codeline>
<codeline lineno="79"><highlight class="comment">///<sp/>\param<sp/>platform_index<sp/>Index<sp/>of<sp/>the<sp/>sycl<sp/>platform<sp/>to<sp/>select.</highlight></codeline>
<codeline lineno="80"><highlight class="comment">///<sp/>\param<sp/>device_index<sp/>Index<sp/>of<sp/>the<sp/>sycl<sp/>device<sp/>to<sp/>select.</highlight></codeline>
<codeline lineno="81" refid="group___vector_1ga7bfd0f0fdf9ddae44956c1b9449f8943" refkind="member"><highlight class="comment"></highlight><highlight class="normal">std::vector&lt;double&gt;<sp/><ref refid="group___vector_1ga7bfd0f0fdf9ddae44956c1b9449f8943" kindref="member">Vector_Addition</ref>(std::vector&lt;double&gt;<sp/>vector_a,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>vector_b,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>platform_index<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index<sp/>=<sp/>0){</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Q<sp/>=<sp/><ref refid="namespacepysycl_1a00b26210f29a913df10ccb3b63c13fb5" kindref="member">pysycl::get_queue</ref>(platform_index,<sp/>device_index);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>pysycl::add_function&lt;double&gt;();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___vector_1ga5b23a7f925405b53f39962c2ce4c1501" kindref="member">Vector_Operation</ref>(vector_a,<sp/>vector_b,<sp/>Q,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="90"><highlight class="comment">///////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="91"><highlight class="comment">///<sp/>\brief<sp/>Function<sp/>for<sp/>vector<sp/>subtraction.</highlight></codeline>
<codeline lineno="92"><highlight class="comment">///<sp/>\param<sp/>vector_a<sp/>First<sp/>vector.</highlight></codeline>
<codeline lineno="93"><highlight class="comment">///<sp/>\param<sp/>vector_b<sp/>Second<sp/>vector.</highlight></codeline>
<codeline lineno="94"><highlight class="comment">///<sp/>\param<sp/>platform_index<sp/>Index<sp/>of<sp/>the<sp/>sycl<sp/>platform<sp/>to<sp/>select.</highlight></codeline>
<codeline lineno="95"><highlight class="comment">///<sp/>\param<sp/>device_index<sp/>Index<sp/>of<sp/>the<sp/>sycl<sp/>device<sp/>to<sp/>select.</highlight></codeline>
<codeline lineno="96" refid="group___vector_1ga49293a8948584a3f1e7f60c44f85a27c" refkind="member"><highlight class="comment"></highlight><highlight class="normal">std::vector&lt;double&gt;<sp/><ref refid="group___vector_1ga49293a8948584a3f1e7f60c44f85a27c" kindref="member">Vector_Subtraction</ref>(std::vector&lt;double&gt;<sp/>vector_a,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>vector_b,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>platform_index<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index<sp/>=<sp/>0){</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Q<sp/>=<sp/><ref refid="namespacepysycl_1a00b26210f29a913df10ccb3b63c13fb5" kindref="member">pysycl::get_queue</ref>(platform_index,<sp/>device_index);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>pysycl::subtract_function&lt;double&gt;();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___vector_1ga5b23a7f925405b53f39962c2ce4c1501" kindref="member">Vector_Operation</ref>(vector_a,<sp/>vector_b,<sp/>Q,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="105"><highlight class="comment">///////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="106"><highlight class="comment">///<sp/>\brief<sp/>Function<sp/>for<sp/>vector<sp/>element<sp/>multiplication.</highlight></codeline>
<codeline lineno="107"><highlight class="comment">///<sp/>\param<sp/>vector_a<sp/>First<sp/>vector.</highlight></codeline>
<codeline lineno="108"><highlight class="comment">///<sp/>\param<sp/>vector_b<sp/>Second<sp/>vector.</highlight></codeline>
<codeline lineno="109"><highlight class="comment">///<sp/>\param<sp/>platform_index<sp/>Index<sp/>of<sp/>the<sp/>sycl<sp/>platform<sp/>to<sp/>select.</highlight></codeline>
<codeline lineno="110"><highlight class="comment">///<sp/>\param<sp/>device_index<sp/>Index<sp/>of<sp/>the<sp/>sycl<sp/>device<sp/>to<sp/>select.</highlight></codeline>
<codeline lineno="111" refid="group___vector_1gafe212cc17352d0535341ef351a818456" refkind="member"><highlight class="comment"></highlight><highlight class="normal">std::vector&lt;double&gt;<sp/><ref refid="group___vector_1gafe212cc17352d0535341ef351a818456" kindref="member">Vector_Element_Multiplication</ref>(std::vector&lt;double&gt;<sp/>vector_a,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>vector_b,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>platform_index<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index<sp/>=<sp/>0){</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Q<sp/>=<sp/><ref refid="namespacepysycl_1a00b26210f29a913df10ccb3b63c13fb5" kindref="member">pysycl::get_queue</ref>(platform_index,<sp/>device_index);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>pysycl::multiply_function&lt;double&gt;();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___vector_1ga5b23a7f925405b53f39962c2ce4c1501" kindref="member">Vector_Operation</ref>(vector_a,<sp/>vector_b,<sp/>Q,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="120"><highlight class="comment">///////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="121"><highlight class="comment">///<sp/>\brief<sp/>Function<sp/>for<sp/>vector<sp/>element<sp/>division.</highlight></codeline>
<codeline lineno="122"><highlight class="comment">///<sp/>\param<sp/>vector_a<sp/>First<sp/>vector.</highlight></codeline>
<codeline lineno="123"><highlight class="comment">///<sp/>\param<sp/>vector_b<sp/>Second<sp/>vector.</highlight></codeline>
<codeline lineno="124"><highlight class="comment">///<sp/>\param<sp/>platform_index<sp/>Index<sp/>of<sp/>the<sp/>sycl<sp/>platform<sp/>to<sp/>select.</highlight></codeline>
<codeline lineno="125"><highlight class="comment">///<sp/>\param<sp/>device_index<sp/>Index<sp/>of<sp/>the<sp/>sycl<sp/>device<sp/>to<sp/>select.</highlight></codeline>
<codeline lineno="126" refid="group___vector_1gadc8ccf79f5be15b1ed782efd21b1bd5f" refkind="member"><highlight class="comment"></highlight><highlight class="normal">std::vector&lt;double&gt;<sp/><ref refid="group___vector_1gadc8ccf79f5be15b1ed782efd21b1bd5f" kindref="member">Vector_Element_Division</ref>(std::vector&lt;double&gt;<sp/>vector_a,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>vector_b,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>platform_index<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index<sp/>=<sp/>0){</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Q<sp/>=<sp/><ref refid="namespacepysycl_1a00b26210f29a913df10ccb3b63c13fb5" kindref="member">pysycl::get_queue</ref>(platform_index,<sp/>device_index);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>pysycl::divide_function&lt;double&gt;();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___vector_1ga5b23a7f925405b53f39962c2ce4c1501" kindref="member">Vector_Operation</ref>(vector_a,<sp/>vector_b,<sp/>Q,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="135"><highlight class="comment">///////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="136"><highlight class="comment">///<sp/>\brief<sp/>Function<sp/>for<sp/>vector<sp/>sum<sp/>reduction.</highlight></codeline>
<codeline lineno="137"><highlight class="comment">///<sp/>\param<sp/>vector_a<sp/>Input<sp/>vector.</highlight></codeline>
<codeline lineno="138"><highlight class="comment">///<sp/>\param<sp/>platform_index<sp/>Index<sp/>of<sp/>the<sp/>sycl<sp/>platform<sp/>to<sp/>select.</highlight></codeline>
<codeline lineno="139"><highlight class="comment">///<sp/>\param<sp/>device_index<sp/>Index<sp/>of<sp/>the<sp/>sycl<sp/>device<sp/>to<sp/>select.</highlight></codeline>
<codeline lineno="140" refid="group___vector_1gad654c20d23fa2c428619536f6f850651" refkind="member"><highlight class="comment"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="group___vector_1gad654c20d23fa2c428619536f6f850651" kindref="member">Vector_Sum_Reduction</ref>(std::vector&lt;double&gt;<sp/>vector_a,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>platform_index<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index<sp/>=<sp/>0){</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>vector_a.size();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Q<sp/>=<sp/><ref refid="namespacepysycl_1a00b26210f29a913df10ccb3b63c13fb5" kindref="member">pysycl::get_queue</ref>(platform_index,<sp/>device_index);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vector_sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>sycl::buffer&lt;double&gt;<sp/>buffer_a(vector_a);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>sycl::buffer&lt;double&gt;<sp/>buffer_vector_sum(&amp;vector_sum,<sp/>1);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>Q.submit([&amp;](sycl::handler&amp;<sp/>h){</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sycl::accessor<sp/>acc_a(buffer_a,<sp/>h,<sp/>sycl::read_only);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sum_reduction<sp/>=<sp/>sycl::reduction(buffer_vector_sum,<sp/>h,<sp/>sycl::plus&lt;double&gt;());</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h.parallel_for(sycl::range&lt;1&gt;(N),<sp/>sum_reduction,<sp/>[=](sycl::id&lt;1&gt;<sp/>idx,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>sum){</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum.combine(acc_a[idx]);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vector_sum;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="168"><highlight class="comment">///////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="169"><highlight class="comment">///<sp/>\brief<sp/>Function<sp/>for<sp/>vector<sp/>minimum<sp/>reduction.</highlight></codeline>
<codeline lineno="170"><highlight class="comment">///<sp/>\param<sp/>vector_a<sp/>Input<sp/>vector.</highlight></codeline>
<codeline lineno="171"><highlight class="comment">///<sp/>\param<sp/>platform_index<sp/>Index<sp/>of<sp/>the<sp/>sycl<sp/>platform<sp/>to<sp/>select.</highlight></codeline>
<codeline lineno="172"><highlight class="comment">///<sp/>\param<sp/>device_index<sp/>Index<sp/>of<sp/>the<sp/>sycl<sp/>device<sp/>to<sp/>select.</highlight></codeline>
<codeline lineno="173" refid="group___vector_1ga363773f976560ac01dbbc23baa98ccc0" refkind="member"><highlight class="comment"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="group___vector_1ga363773f976560ac01dbbc23baa98ccc0" kindref="member">Vector_Min_Reduction</ref>(std::vector&lt;double&gt;<sp/>vector_a,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>platform_index<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index<sp/>=<sp/>0){</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>vector_a.size();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Q<sp/>=<sp/><ref refid="namespacepysycl_1a00b26210f29a913df10ccb3b63c13fb5" kindref="member">pysycl::get_queue</ref>(platform_index,<sp/>device_index);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vector_min<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>sycl::buffer&lt;double&gt;<sp/>buffer_a(vector_a);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>sycl::buffer&lt;double&gt;<sp/>buffer_vector_min(&amp;vector_min,<sp/>1);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>Q.submit([&amp;](sycl::handler&amp;<sp/>h){</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sycl::accessor<sp/>acc_a(buffer_a,<sp/>h,<sp/>sycl::read_only);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>min_reduction<sp/>=<sp/>sycl::reduction(buffer_vector_min,<sp/>h,<sp/>sycl::minimum&lt;double&gt;());</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h.parallel_for(sycl::range&lt;1&gt;(N),<sp/>min_reduction,<sp/>[=](sycl::id&lt;1&gt;<sp/>idx,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>min){</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min.combine(acc_a[idx]);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vector_min;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="201"><highlight class="comment">///////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="202"><highlight class="comment">///<sp/>\brief<sp/>Function<sp/>for<sp/>vector<sp/>maximum<sp/>reduction.</highlight></codeline>
<codeline lineno="203"><highlight class="comment">///<sp/>\param<sp/>vector_a<sp/>Input<sp/>vector.</highlight></codeline>
<codeline lineno="204"><highlight class="comment">///<sp/>\param<sp/>platform_index<sp/>Index<sp/>of<sp/>the<sp/>sycl<sp/>platform<sp/>to<sp/>select.</highlight></codeline>
<codeline lineno="205"><highlight class="comment">///<sp/>\param<sp/>device_index<sp/>Index<sp/>of<sp/>the<sp/>sycl<sp/>device<sp/>to<sp/>select.</highlight></codeline>
<codeline lineno="206" refid="group___vector_1ga31e509922e8e5cc38cbd36a38f6e96fe" refkind="member"><highlight class="comment"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="group___vector_1ga31e509922e8e5cc38cbd36a38f6e96fe" kindref="member">Vector_Max_Reduction</ref>(std::vector&lt;double&gt;<sp/>vector_a,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>platform_index<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index<sp/>=<sp/>0){</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>vector_a.size();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Q<sp/>=<sp/><ref refid="namespacepysycl_1a00b26210f29a913df10ccb3b63c13fb5" kindref="member">pysycl::get_queue</ref>(platform_index,<sp/>device_index);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vector_max<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>sycl::buffer&lt;double&gt;<sp/>buffer_a(vector_a);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>sycl::buffer&lt;double&gt;<sp/>buffer_vector_max(&amp;vector_max,<sp/>1);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>Q.submit([&amp;](sycl::handler&amp;<sp/>h){</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sycl::accessor<sp/>acc_a(buffer_a,<sp/>h,<sp/>sycl::read_only);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>max_reduction<sp/>=<sp/>sycl::reduction(buffer_vector_max,<sp/>h,<sp/>sycl::maximum&lt;double&gt;());</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h.parallel_for(sycl::range&lt;1&gt;(N),<sp/>max_reduction,<sp/>[=](sycl::id&lt;1&gt;<sp/>idx,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>max){</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max.combine(acc_a[idx]);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vector_max;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="234"><highlight class="comment">///////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="235"><highlight class="comment">///<sp/>\brief<sp/>Vector<sp/>Dot<sp/>Product.</highlight></codeline>
<codeline lineno="236"><highlight class="comment">///<sp/>\param<sp/>vector_a<sp/>First<sp/>vector.</highlight></codeline>
<codeline lineno="237"><highlight class="comment">///<sp/>\param<sp/>vector_b<sp/>Second<sp/>vector.</highlight></codeline>
<codeline lineno="238"><highlight class="comment">///<sp/>\param<sp/>platform_index<sp/>Index<sp/>of<sp/>the<sp/>sycl<sp/>platform<sp/>to<sp/>select.</highlight></codeline>
<codeline lineno="239"><highlight class="comment">///<sp/>\param<sp/>device_index<sp/>Index<sp/>of<sp/>the<sp/>sycl<sp/>device<sp/>to<sp/>select.</highlight></codeline>
<codeline lineno="240" refid="group___vector_1gad27fb35fc715e166f6a11336cf293b8a" refkind="member"><highlight class="comment"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="group___vector_1gad27fb35fc715e166f6a11336cf293b8a" kindref="member">Vector_Dot_Product</ref>(std::vector&lt;double&gt;<sp/>vector_a,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>vector_b,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>platform_index<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index<sp/>=<sp/>0){</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vector_c<sp/>=<sp/><ref refid="group___vector_1gafe212cc17352d0535341ef351a818456" kindref="member">Vector_Element_Multiplication</ref>(vector_a,<sp/>vector_b,<sp/>platform_index,<sp/>device_index);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___vector_1gad654c20d23fa2c428619536f6f850651" kindref="member">Vector_Sum_Reduction</ref>(vector_c,<sp/>platform_index,<sp/>device_index);</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>pysycl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#ifndef<sp/>VECTOR_OPERATIONS_H</highlight></codeline>
    </programlisting>
    <location file="Vector/Vector_Operations.h"/>
  </compounddef>
</doxygen>
