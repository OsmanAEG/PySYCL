digraph "Vector/Vector_PyBind_Module.cpp"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",label="Vector/Vector_PyBind\l_Module.cpp",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Python module for vector in PySYCL."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="pybind11/pybind11.h",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="pybind11/stl.h",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="Vector_Operations.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_vector___operations_8h.html",tooltip="Vector operations in PySYCL. These operations receive two individual vectors and return a single vect..."];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="iostream",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node4 -> Node6 [id="edge5_Node000004_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="CL/sycl.hpp",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node4 -> Node7 [id="edge6_Node000004_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="../Device/Device_Inquiry.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_device___inquiry_8h.html",tooltip="Collecting SYCL device availability and information."];
  Node7 -> Node5 [id="edge7_Node000007_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node6 [id="edge8_Node000007_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node4 -> Node8 [id="edge9_Node000004_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="../Device/Device_Object.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_device___object_8h.html",tooltip="SYCL device selection in PySYCL."];
  Node8 -> Node5 [id="edge10_Node000008_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node8 -> Node6 [id="edge11_Node000008_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node4 -> Node9 [id="edge12_Node000004_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="../Math/Math_Functions.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_math___functions_8h.html",tooltip="Math functions returned in the form of lambda functions."];
  Node1 -> Node10 [id="edge13_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="Vector_Object.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_vector___object_8h.html",tooltip="Vector Object in PySYCL."];
  Node10 -> Node6 [id="edge14_Node000010_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node10 -> Node11 [id="edge15_Node000010_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="vector",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node10 -> Node8 [id="edge16_Node000010_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node10 -> Node7 [id="edge17_Node000010_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node10 -> Node9 [id="edge18_Node000010_Node000009",color="steelblue1",style="solid",tooltip=" "];
}
